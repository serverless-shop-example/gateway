AWSTemplateFormatVersion: "2010-09-09"
Description: Backend for the shop example

Parameters:
  ProductsServiceStack:
    Type: String
    Description: Name of the Products Service Stack

Resources:
  ShopApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: 'ShopApi'

  GetProductsFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      FunctionName:
        Fn::ImportValue: !Sub "${ProductsServiceStack}-PostProductFunction"
      Principal: apigateway.amazonaws.com
      SourceArn: !Join ['/', [!Join [':', ['arn:aws:execute-api', !Ref 'AWS::Region', !Ref 'AWS::AccountId', !Ref ShopApi]], '*']]

  PostProductFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      FunctionName:
        Fn::ImportValue: !Sub "${ProductsServiceStack}-PostProductFunction"
      Principal: apigateway.amazonaws.com
      SourceArn: !Join ['/', [!Join [':', ['arn:aws:execute-api', !Ref 'AWS::Region', !Ref 'AWS::AccountId', !Ref ShopApi]], '*']]

  ShopApiProdStage:
    DependsOn:
    - ShopApiGatewayAccount
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId: !Ref ShopApiDeployment
      MethodSettings:
      - DataTraceEnabled: true
        HttpMethod: "*"
        LoggingLevel: INFO
        ResourcePath: "/*"
      RestApiId: !Ref ShopApi
      StageName: PROD

  ShopApiCloudWatchLogsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - apigateway.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: ApiGatewayLogsPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:*
            Resource: arn:aws:logs:*:*:*

  ShopApiGatewayAccount:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn: !GetAtt ShopApiCloudWatchLogsRole.Arn

  ShopApiDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
    - GetProductsRequest
    Properties:
      RestApiId: !Ref ShopApi
      StageName: DUMMY

  ProductsResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref ShopApi
      ParentId: !GetAtt ShopApi.RootResourceId
      PathPart: 'products'

  GetProductsRequest:
    DependsOn: GetProductsFunctionPermission
    Type: AWS::ApiGateway::Method
    Properties:
      ResourceId: !Ref ProductsResource
      RestApiId: !Ref ShopApi
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Join ['/', [!Join [':', ['arn:aws:apigateway', !Ref 'AWS::Region', 'lambda:path']], '2015-03-31/functions', "Fn::ImportValue": !Sub "${ProductsServiceStack}-GetProductsFunction", 'invocations']]

  PostProductRequest:
    DependsOn: PostProductFunctionPermission
    Type: AWS::ApiGateway::Method
    Properties:
      ResourceId: !Ref ProductsResource
      RestApiId: !Ref ShopApi
      AuthorizationType: NONE
      HttpMethod: POST
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Join ['/', [!Join [':', ['arn:aws:apigateway', !Ref 'AWS::Region', 'lambda:path']], '2015-03-31/functions', "Fn::ImportValue": !Sub "${ProductsServiceStack}-PostProductFunction", 'invocations']]

  ProductsOptionsRequest:
    Type: "AWS::ApiGateway::Method"
    Properties:
      ResourceId: !Ref ProductsResource
      RestApiId: !Ref ShopApi
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        Type: MOCK
        IntegrationResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
            method.response.header.Access-Control-Allow-Methods: "'GET,POST,OPTIONS'"
            method.response.header.Access-Control-Allow-Origin: "'*'"
          ResponseTemplates:
            application/json: ''
      MethodResponses:
      - StatusCode: 200
        ResponseParameters:
          method.response.header.Access-Control-Allow-Headers: false
          method.response.header.Access-Control-Allow-Methods: false
          method.response.header.Access-Control-Allow-Origin: false


